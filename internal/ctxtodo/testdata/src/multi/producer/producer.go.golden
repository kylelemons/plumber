// Copyright 2021 Kyle Lemons
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package producer

import (
	"context"
	"fmt"
	"net"
)

type Client struct {
	conn net.Conn
}

func Dial(ctx context.Context, addr string) (*Client, error) { // want Dial:"NeedsContext"
	conn, err := (&net.Dialer{}).DialContext(ctx, "tcp", addr) // want "Plumb context"
	if err != nil {
		return nil, fmt.Errorf("failed to dial %q: %w", addr, err)
	}
	return &Client{conn: conn}, nil
}

func (Client) Noop(ctx context.Context) { // want Noop:"NeedsContext"
	// want "Plumb context"
}
